// automatically generated from `../src/crypto/smartcont/stdlib.fc` `code.fc` 
PROGRAM{
  DECLPROC send_message_back
  DECLPROC ~load_common_auction_fields
  DECLPROC pack_state
  DECLPROC unpack_state
  DECLPROC check_blind_bids
  DECLPROC complete_auction
  DECLPROC recv_internal
  DECLPROC recv_external
  85143 DECLMETHOD seqno
  send_message_back PROC:<{
    0 PUSHINT
    24 PUSHINT
    NEWC
    6 STU
    s0 s8 XCHG2
    STSLICER
    ROT
    STGRAMS
    s1 s6 XCHG
    107 STU
    s1 s4 XCHG
    32 STU
    s1 s2 XCHG
    64 STU
    OVER
    -1 GTINT
    IF:<{
      32 STU
    }>ELSE<{
      NIP
    }>
    OVER
    -1 GTINT
    IF:<{
      32 STU
    }>ELSE<{
      NIP
    }>
    ENDC
    SWAP
    SENDRAWMSG
  }>
  ~load_common_auction_fields PROC:<{
    8 LDU
    32 LDU
    32 LDU
    LDGRAMS
    LDGRAMS
    LDGRAMS
    6 -ROLL
  }>
  pack_state PROCREF:<{
    NEWC
    s1 s5 XCHG
    32 STU
    s1 s3 XCHG
    256 STU
    SWAP
    STSLICER
    SWAP
    STGRAMS
    STDICT
    ENDC
  }>
  unpack_state PROC:<{
    c4 PUSH
    CTOS
    32 LDU
    256 LDU
    264 PUSHINT
    LDSLICEX
    LDGRAMS
    LDDICT
    ENDS
  }>
  check_blind_bids PROC:<{
    0 PUSHINT
    s0 s0 s0 PUSH3
    TRUE
    -1 PUSHINT
    UNTIL:<{
      s8 PUSH
      8 PUSHPOW2
      DICTUGETNEXT
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        8 LDU
        LDGRAMS
        9 PUSHPOW2
        LDSLICEX
        NIP
        DUP
        SDEMPTY
        IF:<{
          3 BLKDROP
          s2 POP
          FALSE
        }>ELSE<{
          LDGRAMS
          DROP
          s0 s7 PUSH2
          GREATER
          IF:<{
            s6 POP
            s6 POP
            s6 POP
            s6 POP
            s5 PUSH
          }>ELSE<{
            s3 s9 XCHG
            s3 s8 XCHG
            s6 s7 XCHG
            3 BLKDROP
          }>
          s5 s6 XCHG
          s0 s5 XCHG
          s3 s4 XCHG
          s0 s2 XCHG
        }>
      }>ELSE<{
        2SWAP
        DROP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    DROP
    s2 PUSH
    0 EQINT
    s0 s6 XCHG
    NOT
    OVER
    NOT
    AND
    s1 s6 XCHG
    OR
    IFJMP:<{
      DROP
      s5 POP
      s5 POP
      s5 POP
      SWAP
    }>
    -1 PUSHINT
    0 PUSHINT
    UNTIL:<{
      s1 s8 XCPU
      8 PUSHPOW2
      DICTUGETNEXT
      NULLSWAPIFNOT
      NULLSWAPIFNOT
      DUP
      IF:<{
        s0 s2 XCHG
        8 LDU
        LDGRAMS
        s3 s8 PUSH2
        EQUAL
        IFNOT:<{
          s1 s13 PUSH2
          SUB
          s1 s12 XCHG
          SUB
          0 PUSHINT
          DUP
          196 PUSHINT
          NEWC
          9 STU
          s1 s5 XCHG
          8 STU
          s5 s(-1) PUXC
          256 STU
          s3 s15 XCPU
          SUB
          s1 s3 XCHG
          STGRAMS
          s1 s3 XCHG
          107 STU
          32 STU
          ENDC
          3 PUSHINT
          SENDRAWMSG
          s0 s9 XCHG
          9 PUSHPOW2
          LDSLICEX
          NIP
          DUP
          SDEMPTY
          IFNOT:<{
            LDGRAMS
            DROP
            s0 s3 PUSH2
            GREATER
            s1 s6 PUSH2
            LESS
            AND
            IF:<{
              s3 POP
            }>ELSE<{
              DROP
            }>
          }>ELSE<{
            DROP
          }>
        }>ELSE<{
          3 BLKDROP
        }>
      }>ELSE<{
        s2 POP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    NIP
    s7 POP
    s0 s8 XCHG
    65 EQINT
    IF:<{
      DROP
    }>ELSE<{
      s5 POP
    }>
    s6 s4 PUSH2
    GREATER
    IF:<{
      s6 s5 PUXC
      SUB
      s1 s3 XCHG
      SUB
      0 PUSHINT
      DUP
      196 PUSHINT
      NEWC
      9 STU
      s5 s(-1) PUXC
      8 STU
      s7 s(-1) PUXC
      256 STU
      s8 s6 XCPU
      SUB
      s1 s8 XCHG
      STGRAMS
      s1 s7 XCHG
      107 STU
      s1 s6 XCHG
      32 STU
      ENDC
      3 PUSHINT
      SENDRAWMSG
    }>ELSE<{
      s3 s6 XCHG
      s3 s5 XCHG2
      2DROP
    }>
    s0 s4 XCHG2
  }>
  complete_auction PROC:<{
    32 PUSHINT
    s5 s6 s6 PUXC2
    DICTUDELGET
    NULLSWAPIFNOT
    DROP
    NIP
    NEWC
    SWAP
    STSLICER
    ENDC
    670869177 PUSHINT
    0 PUSHINT
    196 PUSHINT
    NEWC
    9 STU
    s0 s6 XCHG2
    STSLICER
    30 PUSHPOW2
    STGRAMS
    s1 s5 XCHG
    107 STU
    s1 s4 XCHG
    32 STU
    s1 s4 XCHG
    64 STU
    8 STU
    s1 s2 XCHG
    256 STU
    ROT
    STGRAMS
    STREF
    ENDC
    3 PUSHINT
    SENDRAWMSG
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    IFJMP:<{
      3 BLKDROP
    }>
    OVER
    SEMPTY
    IFJMP:<{
      3 BLKDROP
    }>
    LDMSGADDR
    DROP
    DUP
    REWRITESTDADDR
    s0 s3 XCHG
    32 LDU
    OVER
    0 EQINT
    IFJMP:<{
      6 BLKDROP
    }>
    unpack_state CALLDICT
    s0 s5 XCHG
    64 LDU
    s7 PUSH
    100 EQINT
    IFJMP:<{
      32 LDU
      s1 s7 PUSH2
      32 PUSHINT
      DICTUGET
      NULLSWAPIFNOT
      IFNOTJMP:<{
        s3 s8 XCHG
        8 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        1 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      ~load_common_auction_fields CALLDICT
      s4 PUSH
      NOW
      LESS
      IFNOTJMP:<{
        s9 s12 XCHG
        12 BLKDROP
        NIP
        NIP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        2 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      s3 PUSH
      NOW
      GREATER
      IFNOTJMP:<{
        s9 s12 XCHG
        12 BLKDROP
        NIP
        NIP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        3 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      19 s() PUSH
      s3 PUSH
      GEQ
      IFNOTJMP:<{
        s9 s12 XCHG
        12 BLKDROP
        NIP
        NIP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        4 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      FALSE
      s6 PUSH
      64 LESSINT
      IFJMP:<{
        s8 POP
        DUP
        0 GTINT
        20 s() PUSH
        s2 PUSH
        GEQ
        AND
        IF:<{
          s7 POP
          TRUE
        }>ELSE<{
          s0 s7 XCHG
        }>
        19 s() PUSH
        s2 PUSH
        GEQ
        IFNOTJMP:<{
          s9 s12 XCHG
          12 BLKDROP
          NIP
          NIP
          s2 POP
          s3 POP
          s3 POP
          4294967294 PUSHINT
          5 PUSHINT
          0 PUSHINT
          s3 s5 XCHG
          s2 s4 XCHG
          64 PUSHINT
          send_message_back CALLDICT
        }>
        s0 s6 XCHG
        LDGRAMS
        LDGRAMS
        OVER
        0 NEQINT
        s2 s3 PUSH2
        ADD
        23 s() PUSH
        SWAP
        LESS
        AND
        IFJMP:<{
          s11 s12 XCHG
          12 BLKDROP
          s0 s4 XCHG
          4 BLKDROP
          s2 POP
          s3 POP
          s3 POP
          4294967294 PUSHINT
          6 PUSHINT
          0 PUSHINT
          s3 s5 XCHG
          s2 s4 XCHG
          64 PUSHINT
          send_message_back CALLDICT
        }>
        s11 POP
        16 s() POP
        17 s() POP
        s14 PUSH
        0 EQINT
        IFNOT:<{
          s14 s1 PUSH2
          SUB
          s1 s10 XCHG
          SUB
          s0 s8 XCHG
          264 PUSHINT
          LDSLICEX
          DROP
          0 PUSHINT
          DUP
          196 PUSHINT
          NEWC
          9 STU
          s0 s3 XCHG2
          STSLICER
          s0 16 s() XCHG
          s3 PUSH
          SUB
          s1 16 s() XCHG
          STGRAMS
          107 STU
          s1 s14 XCHG
          32 STU
          ENDC
          3 PUSHINT
          SENDRAWMSG
        }>ELSE<{
          s14 s9 XCHG2
          s8 POP
          DROP
        }>
        s0 s3 XCHG
        IF:<{
          4 BLKDROP
          s2 POP
          s6 POP
          s7 POP
          s3 PUSH
          s3 s7 XCHG
          s1 s0 s2 PUXC2
          s7 s9 s10 XCHG3
          complete_auction CALLDICT
        }>ELSE<{
          s15 s11 PUSH2
          SUB
          s1 s6 XCHG
          ADD
          NEWC
          s1 s2 XCHG
          8 STU
          s1 s5 XCHG
          32 STU
          32 STU
          s0 s9 XCHG2
          STGRAMS
          s0 s3 XCHG2
          STGRAMS
          s0 s7 XCHG2
          STGRAMS
          s0 s8 XCHG2
          STGRAMS
          s0 s9 XCHG2
          STGRAMS
          s1 s5 XCHG
          8 STU
          s1 s6 XCHG
          256 STU
          s0 s4 s4 XCHG3
          32 PUSHINT
          DICTUSETB
          s3 s4 s3 XCHG3
        }>
        s2 s4 XCHG
        3 ROLL
        pack_state INLINECALLDICT
        c4 POP
      }>
      s0 s7 XCHG
      32 LDU
      LDGRAMS
      22 s() PUSH
      s2 PUSH
      GEQ
      IFNOTJMP:<{
        12 BLKDROP
        s0 s5 XCHG
        5 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        7 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      s3 s1 PUSH2
      GREATER
      23 s() PUSH
      s5 PUSH
      GEQ
      AND
      IF:<{
        s9 POP
        TRUE
      }>ELSE<{
        s0 s9 XCHG
      }>
      s0 s9 XCHG
      LDDICT
      DROP
      21 s() PUSH
      OVER
      8 PUSHPOW2
      DICTUGET
      NULLSWAPIFNOT
      NIP
      s10 PUSH
      NOT
      SWAP
      AND
      IFJMP:<{
        12 BLKDROP
        s0 s5 XCHG
        5 BLKDROP
        s2 POP
        s3 POP
        s3 POP
        4294967294 PUSHINT
        8 PUSHINT
        0 PUSHINT
        s3 s5 XCHG
        s2 s4 XCHG
        64 PUSHINT
        send_message_back CALLDICT
      }>
      s12 POP
      17 s() POP
      18 s() POP
      s0 s6 XCHG
      IF:<{
        s7 s8 XCHG
        8 BLKDROP
        s6 POP
        s7 POP
        s3 PUSH
        s3 s5 XCHG
        s1 s0 s2 PUXC2
        s7 s9 s10 XCHG3
        complete_auction CALLDICT
      }>ELSE<{
        18 s() PUSH
        s2 PUSH
        SUB
        s1 s10 XCHG
        ADD
        s0 s6 XCHG
        9 PUSHPOW2
        LDSLICEX
        DROP
        NEWC
        s1 16 s() XCHG
        8 STU
        SWAP
        s0 18 s() XCHG
        STGRAMS
        s0 s14 XCHG2
        STSLICER
        s0 s15 s6 XCHG3
        8 PUSHPOW2
        DICTUSETB
        NEWC
        s1 s5 XCHG
        8 STU
        s1 s13 XCHG
        32 STU
        s1 s10 XCHG
        32 STU
        s0 s12 XCHG2
        STGRAMS
        ROT
        STGRAMS
        s0 s9 XCHG2
        STGRAMS
        s1 s7 XCHG
        32 STU
        s0 s4 XCHG2
        STGRAMS
        s1 s6 XCHG
        STDICT
        s0 s6 s6 XCHG3
        32 PUSHINT
        DICTUSETB
        s2 s3 XCHG2
      }>
      s0 s4 XCHG
      s2 s3 XCHG2
      pack_state INLINECALLDICT
      c4 POP
    }>
    s1 s6 XCHG
    6 BLKDROP
    s2 POP
    s3 POP
    s3 POP
    OVER
    31 PUSHPOW2
    AND
    IFNOTJMP:<{
      32 PUSHPOW2DEC
      0 PUSHINT
      DUP
      s3 s5 XCHG
      s2 s4 XCHG
      64 PUSHINT
      send_message_back CALLDICT
    }>
    3 BLKDROP
  }>
  recv_external PROC:<{
    9 PUSHPOW2
    LDSLICEX
    DUP
    32 LDU
    32 LDU
    32 LDU
    NOW
    s1 s3 XCHG
    LESS
    35 THROWIF
    unpack_state CALLDICT
    s7 s4 XCPU
    EQUAL
    33 THROWIFNOT
    s0 s3 XCHG
    INC
    s4 PUSH
    101 EQINT
    IF:<{
      s4 POP
      s0 s4 XCHG
      256 LDU
      s0 s7 XCHG
      HASHSU
      s0 s8 s8 XCHG3
      CHKSIGNU
      34 THROWIFNOT
      s0 s4 XCHG
      32 LDU
      DROP
      s0 s3 PUSH2
      32 PUSHINT
      DICTUGET
      NULLSWAPIFNOT
      35 THROWIFNOT
      ~load_common_auction_fields CALLDICT
      2DROP
      s2 POP
      NOW
      GREATER
      46 THROWIF
      0 PUSHINT
      s0 s2 PUSH2
      64 LESSINT
      IF:<{
        s3 POP
        ACCEPT
        s0 s3 XCHG
        LDGRAMS
        NIP
        LDGRAMS
        NIP
        LDGRAMS
        OVER
        0 EQINT
        IFNOT:<{
          s3 POP
          s3 POP
          SWAP
          8 LDU
          256 LDU
          DROP
          s3 s2 PUXC
          SUB
          s1 s8 XCHG
          SUB
        }>ELSE<{
          s4 s9 XCHG
          s4 s4 s0 XCHG3
          2DROP
        }>
      }>ELSE<{
        2DROP
        s0 s2 XCHG
        32 LDU
        NOW
        s1 s2 XCHG
        GREATER
        47 THROWIF
        ACCEPT
        LDGRAMS
        NIP
        LDDICT
        DROP
        s0 s3 XCHG2
        s0 s7 XCHG
        TRUE
        check_blind_bids CALLDICT
        NIP
        s3 s7 XCHG
        s1 s2 XCHG
      }>
      s6 PUSH
      s0 s4 XCHG
      s3 s6 XCPU
      s9 s3 s3 XCHG3
      complete_auction CALLDICT
    }>ELSE<{
      s4 PUSH
      102 EQINT
      IF:<{
        s4 POP
        s0 s4 XCHG
        256 LDU
        s0 s7 XCHG
        HASHSU
        s0 s8 s8 XC2PU
        CHKSIGNU
        34 THROWIFNOT
        s0 s5 XCHG
        LDREF
        DROP
        CTOS
        DUP
        HASHSU
        SWAP
        32 LDU
        256 LDU
        LDGRAMS
        DROP
        s2 s7 PUSH2
        32 PUSHINT
        DICTUGET
        NULLSWAPIFNOT
        35 THROWIFNOT
        ~load_common_auction_fields CALLDICT
        DROP
        s3 POP
        s0 s4 XCHG
        32 LDU
        LDGRAMS
        NIP
        LDDICT
        DROP
        s4 PUSH
        63 GTINT
        36 THROWIFNOT
        NOW
        s1 s3 XCHG
        GREATER
        37 THROWIFNOT
        NOW
        LESS
        38 THROWIFNOT
        s5 s0 PUSH2
        8 PUSHPOW2
        DICTUGET
        NULLSWAPIFNOT
        39 THROWIFNOT
        8 LDU
        LDGRAMS
        9 PUSHPOW2
        LDSLICEX
        DROP
        s10 s0 s0 XC2PU
        s0 17 s() XCHG
        CHKSIGNU
        40 THROWIFNOT
        s10 s13 s11 PUSH3
        s12 s15 PUSH2
        pack_state INLINECALLDICT
        c4 POP
        COMMIT
        ACCEPT
        s5 s2 PUXC
        GEQ
        s5 s8 PUSH2
        LEQ
        AND
        IF:<{
          NEWC
          s1 s2 XCHG
          8 STU
          s0 s7 XCHG2
          STGRAMS
          s0 s12 XCHG2
          STSLICER
          ROT
          STGRAMS
          s0 s0 s4 XCHG3
          8 PUSHPOW2
          DICTUSETB
        }>ELSE<{
          s2 s13 XCHG
          s3 s7 XCHG
          s0 s5 XCHG
          5 BLKDROP
        }>
        s8 s8 s0 XCHG3
        s3 PUSH
        FALSE
        check_blind_bids CALLDICT
        DROP
        IF:<{
          s6 PUSH
          s0 s4 XCHG
          s3 s9 XCHG
          s6 PUSH
          s10 s3 s3 XCHG3
          s0 s10 XCHG
          complete_auction CALLDICT
        }>ELSE<{
          s3 s8 XCHG
          4 BLKDROP
        }>
      }>ELSE<{
        s0 s7 XCHG
        HASHSU
        s0 s8 s2 XC2PU
        CHKSIGNU
        43 THROWIFNOT
        s5 s0 s6 PUSH3
        s4 s7 PUSH2
        pack_state INLINECALLDICT
        c4 POP
        COMMIT
        ACCEPT
        s2 PUSH
        1 EQINT
        IF:<{
          s2 POP
          0 PUSHINT
          BALANCE
          UNCONS
          DROP
          s0 s4 XCHG
          WHILE:<{
            DUP
            SEMPTY
            NOT
          }>DO<{
            264 PUSHINT
            LDSLICEX
            LDGRAMS
            s3 s1 XCPU
            ADD
            s6 s0 PUSH2
            SUB
            s5 s(-1) PUXC
            GEQ
            44 THROWIF
            0 PUSHINT
            DUP
            196 PUSHINT
            NEWC
            9 STU
            s0 s5 XCHG2
            STSLICER
            s0 s3 XCHG2
            STGRAMS
            s1 s3 XCHG
            107 STU
            32 STU
            ENDC
            3 PUSHINT
            SENDRAWMSG
            SWAP
          }>
          2DROP
          s2 POP
        }>ELSE<{
          s2 PUSH
          2 EQINT
          IF:<{
            s2 POP
            s0 s2 XCHG
            32 LDU
            LDREF
            DROP
            s1 s4 PUSH2
            32 PUSHINT
            DICTUGET
            NULLSWAPIFNOT
            NIP
            45 THROWIF
            CTOS
            s0 s1 s4 XCHG3
            32 PUSHINT
            DICTUSET
          }>ELSE<{
            s0 s2 XCHG
            3 EQINT
            IF:<{
              s0 s2 XCHG
              32 LDU
              DROP
              s0 s3 PUSH2
              32 PUSHINT
              DICTUGET
              NULLSWAPIFNOT
              35 THROWIFNOT
              ~load_common_auction_fields CALLDICT
              s2 s4 XCHG
              4 BLKDROP
              SWAP
              64 LESSINT
              IF:<{
                SWAP
                LDGRAMS
                NIP
                LDGRAMS
                OVER
                0 GTINT
                IF:<{
                  264 PUSHINT
                  LDSLICEX
                  DROP
                  s1 s2 PUSH2
                  SUB
                  s1 s6 XCHG
                  SUB
                  0 PUSHINT
                  DUP
                  196 PUSHINT
                  NEWC
                  9 STU
                  s0 s8 XCHG2
                  STSLICER
                  s3 s4 XCHG2
                  SUB
                  s1 s3 XCHG
                  STGRAMS
                  s1 s5 XCHG
                  107 STU
                  s1 s4 XCHG
                  32 STU
                  ENDC
                  3 PUSHINT
                  SENDRAWMSG
                }>ELSE<{
                  3 BLKDROP
                }>
              }>ELSE<{
                SWAP
                LDDICT
                DROP
                -1 PUSHINT
                UNTIL:<{
                  OVER
                  8 PUSHPOW2
                  DICTUGETNEXT
                  NULLSWAPIFNOT
                  NULLSWAPIFNOT
                  DUP
                  IF:<{
                    s0 s2 XCHG
                    8 LDU
                    LDGRAMS
                    DROP
                    s0 s5 PUSH2
                    SUB
                    s1 s9 XCHG
                    SUB
                    0 PUSHINT
                    DUP
                    196 PUSHINT
                    NEWC
                    9 STU
                    s1 s4 XCHG
                    8 STU
                    s4 s(-1) PUXC
                    256 STU
                    s10 s7 XCPU
                    SUB
                    s1 s10 XCHG
                    STGRAMS
                    s1 s2 XCHG
                    107 STU
                    s1 s8 XCHG
                    32 STU
                    ENDC
                    3 PUSHINT
                    SENDRAWMSG
                  }>ELSE<{
                    s2 POP
                  }>
                  SWAP
                  NOT
                }>
                3 BLKDROP
              }>
              s0 s3 XCHG2
              32 PUSHINT
              DICTUDELGET
              NULLSWAPIFNOT
              2DROP
            }>ELSE<{
              2SWAP
              DROP
            }>
          }>
          s0 s2 XCHG
        }>
        s4 s3 XCHG2
      }>
      s3 s4 XCHG
    }>
    s0 s4 XCHG
    s1 s3 s3 XCHG3
    pack_state INLINECALLDICT
    c4 POP
  }>
  seqno PROC:<{
    c4 PUSH
    CTOS
    32 PLDU
  }>
}END>c
